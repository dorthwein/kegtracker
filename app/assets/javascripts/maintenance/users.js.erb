// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
$(document).on('pageshow', '#_maintenance_users', function(event){	

	// prepare the data
	$.mobile.loading('show');
	var theme = settings.theme


	url = system.server + $('.ui-page-active').attr('data-url') + '.json'
	var source =
	{
		datatype : "json",
		type: 'GET',
		datafields: [
			{ name: 'entity_description' },
			{ name: 'first_name' },
			{ name: 'last_name' },
			{ name: 'email' },
			{ name: 'cell_phone' },
			{ name: 'office_phone' },

			{ name: 'scanner_delivery_pickup' },
			{ name: 'scanner_add' },
			{ name: 'scanner_fill' },
			{ name: 'scanner_move' },

			{ name: 'user_maintenance' },
			{ name: 'location_maintenance' },
			{ name: 'product_maintenance' },
			{ name: 'network_maintenance' },
			{ name: 'barcode_maker_maintenance' },
			{ name: '_id'}
		],
		id: '_id',
		url: url,
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	var dataAdapter = new $.jqx.dataAdapter(source, {
		beforeSend: function(jqXHR, settings){$.mobile.loading('show')},
		loadComplete: function (data) {$.mobile.loading('hide');},
		loadError: function (xhr, status, error) { }      
	});
	// Initialize Grid
	$("#jqxgrid").jqxGrid(
	{
		// Grid Options
		groupable: true,
		sortable: true,
		filterable: true,
		showfilterrow: true,		
        autoshowfiltericon: true,		
		theme: theme,
		width: '100%',
		groupsexpandedbydefault: true,
		height:  system.table_height,
		source: dataAdapter,
		columnsresize: true,
		altrows: true,				
		columns: [			
			{ text: 'First', datafield: 'first_name' },
			{ text: 'Last', datafield: 'last_name' },
			{ text: 'Email', datafield: 'email' }, 
			{ text: 'Entity', datafield: 'entity_description', filtertype: 'checkedlist' },
			{ text: 'Cell', datafield: 'cell_phone' },
			{ text: 'Office', datafield: 'office_phone' },

			{ text: 'Pickup/Delivery (Scanner)', datafield: 'scanner_delivery_pickup', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}
				}
			},
			{ text: 'Add (Scanner)', datafield: 'scanner_add', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {					
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Fill (Scanner)', datafield: 'scanner_fill', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {					
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Move (Scanner)', datafield: 'scanner_move', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},

			{ text: 'User (Maintenance)', datafield: 'user_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Location (Maintenance)', datafield: 'location_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {							
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Product (Maintenance)', datafield: 'product_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Network (Maintenance)', datafield: 'network_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {							
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},			
		]
	});

	$('#jqxgrid').bind('rowselect', function (event){	    
	    var args = event.args;
	    var row = args.rowindex;
	    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', row);		
		$.ajax({
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			type: "GET",
			dataType : "JSON",
			data: rowdata,
		}).done(function( data ) {				
			// Entity List
//			$("#entity_id").jqxDropDownList({ source: data['entities'], disabled: false });
//			var item = $("#entity_id").jqxDropDownList('getItemByValue', data['user']['entity_id']);
//			$("#entity_id").jqxDropDownList('selectItem', item ); 			

			// Enable Inputs
			$(".form_input").jqxInput({disabled: false });
			$(".form_input").val('');
			$(".toggle_switch").jqxToggleButton({disabled: false });
			$("#updateSaveButton").jqxButton({disabled: false});
			$("#updateSaveButton").show();
			$("#newSaveButton").hide();
			$("#newCancelButton").hide();

//			alert(JSON.stringify(data['user']));
			// User Detail Input Values

			$.each(data['user'], function(key, value){
				element = $('#' + key)
				if( element.hasClass('toggle_switch')){
//			        var toggled = $(this).jqxToggleButton('toggled');					
			        if (value == 1) {			        	
			            element.html('On');
			            element.val(1);
			            element.jqxToggleButton({ toggled: true });
			            element.jqxToggleButton('refresh');
			        }
			        else {
						element.html('Off');
			            element.val(0);
			            element.jqxToggleButton({toggled: false });
			            element.jqxToggleButton('refresh');
			        }			    				
				}

				element.val(value)				
			})
		});					
	});




    $('#docking').jqxDocking({ theme: theme,  orientation: 'horizontal', width: '100%', mode: 'docked' });
    $('#docking').jqxDocking('disableWindowResize', 'window1');
    $('#docking').jqxDocking('disableWindowResize', 'window2');
	$('#docking').jqxDocking('pinWindow', 'window1');
	$('#docking').jqxDocking('pinWindow', 'window2');
	$('#docking').jqxDocking('hideAllCloseButtons');
	
	$('#docking').jqxDocking('setWindowProperty','window1', 'keyboardCloseKey', 'none' ),

	// Inputs
	$("#entity_id").jqxDropDownList({ source: {}, valueMember: 'value', displayMember: 'html', width: '100%',  height: '25px', theme: theme, disabled: true });
	
	$(".form_input").jqxInput({height: '25px', width: '100%', minLength: 1, theme: theme, disabled: true });
	
	$(".toggle_switch").jqxToggleButton({ width: '100%', height:'15px', theme: theme, disabled: true });
    $(".toggle_switch").bind('click', function () {        
        if(!$(this).attr('disabled')){	        
	        var toggled = $(this).jqxToggleButton('toggled');
	        if (toggled) {
	            $(this).html('On');
	            $(this).val(1);
	        }
	        else {
				$(this).html('Off');
	            $(this).val(0);
	        }
	    }
    });



	$('#form_validator').jqxValidator({
	 	rules: [
	 		// Email Rules
	        { input: '#email', message: 'Username is required!', action: 'keyup, blur', rule: 'required' },
			{ input: '#email', message: 'Invalid e-mail!', action: 'keyup', rule: 'email' },

	        // First/Last Name
	        { input: '#first_name', message: 'First Name is required!', action: 'keyup, blur', rule: 'required' },
	        { input: '#first_name', message: 'Your first name must contain only letters!', action: 'keyup', rule: 'notNumber' },

	        { input: '#last_name', message: 'Last Name is required!', action: 'keyup, blur', rule: 'required' },
	        { input: '#last_name', message: 'Your last name must contain only letters!', action: 'keyup', rule: 'notNumber' },
	        { input: '#password', message: 'Password is required!', action: 'keyup, blur', rule: function (input, commit) {
					if( $('#newSaveButton').is(':visible') && $('#password').val() == '' ){
						return false;
					}
					return true;
	        	}
	        }, 

	        { input: '#password', message: 'Your password must be greater than 4 characters!', action: 'keyup, blur', rule: function (input, commit) {
					if( $('#newSaveButton').is(':visible') && $('#password').val().length < 4){												
						return false;
					}
					return true;
	        	}
	        },
	        { input: '#password_confirmation', message: 'Password doesn\'t match!', action: 'keyup, focus', rule: function(input, commit){
		            if (input.val() === $('#password').val())  {
		                return true;
		            }
		           	return false;		           
	        	}
	        },
		],
		theme: theme
	});


	// Style Buttons
	$("#updateSaveButton").jqxButton({disabled: true, theme: theme, width: '100%'});
    $("#updateSaveButton").bind('click', function () {
    	if($('#form_validator').jqxValidator('validate', element)){	
	        var params = {user:{}}
//	        params['user']['entity_id'] = $("#entity_id").jqxDropDownList('getSelectedItem').value;              
	        $('.toggle_switch').each(function(key, obj) {        
	        	params['user'][obj.id] = $(obj).val();
	        });

	        $('.form_input').each(function(key, obj) {        
	        	params['user'][obj.id] = $(obj).val();
	        });        


	//		alert(JSON.stringify(params));
			var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');		
		    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);
			$.ajax({
				url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
				type: "PUT",
				dataType : "JSON",
				data: params,
			}).done(function( data ) {	
				if(data['success'] == false){
					alert(data['message'])
				}			
				dataAdapter.dataBind();
			})
		}
    });
    
    $("#newCancelButton").jqxButton({disabled: true, theme: theme, width: '100%'});

	$("#newSaveButton").jqxButton({disabled: true, theme: theme, width: '100%'});
    $("#newSaveButton").bind('click', function () {
    	if($('#form_validator').jqxValidator('validate', element)){	
	        var params = {user:{}}
	        params['user']['entity_id'] = $("#entity_id").jqxDropDownList('getSelectedItem').value;              
	        $('.toggle_switch').each(function(key, obj) {        
	        	params['user'][obj.id] = $(obj).val();
	        });

	        $('.form_input').each(function(key, obj) {        
	        	params['user'][obj.id] = $(obj).val();
	        });        

			var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');		
		    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);
			$.ajax({
				url: system.server + $('.ui-page-active').attr('data-url'),
				type: "POST",
				data: params,
			}).done(function( data ) {	
				if(data['success'] == false){
					alert(data['message'])
				}
				dataAdapter.dataBind();
			})
		}
    });	


	$("#new").jqxButton({ theme: theme, width:100 });            
	$("#new").click(function () {
		$.ajax({
			type: "GET",
			dataType : "JSON",
			url: system.server + $('.ui-page-active').attr('data-url') + '/new',
			data: { },
		}).done(function( data ) {			
			
			$("#entity_id").jqxDropDownList({ source: data['entities'], disabled: false });
			$("#entity_id").jqxDropDownList('clearSelection' ); 
			
			$(".toggle_switch").html('Off');
            $(".toggle_switch").val(0);
            $(".toggle_switch").jqxToggleButton({toggled: false });
            $(".toggle_switch").jqxToggleButton('refresh');

			$(".form_input").jqxInput({disabled: false });
			$(".form_input").val('');

			$(".toggle_switch").jqxToggleButton({disabled: false, toggled: false });

			$("#newSaveButton").jqxButton({disabled: false});			
			$("#newCancelButton").jqxButton({disabled: false});			

			$("#newSaveButton").show();			
			$("#newCancelButton").show();
			$("#updateSaveButton").hide();
		});		        	
	});



	$("#delete").jqxButton({ theme: theme, width:100 });            
	$("#delete").click(function () {
		var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');
		var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);		
		$.ajax({
			type: "DELETE",
			dataType : "JSON",
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			data: { 
				_id: rowdata['_id'],
			},
		}).done(function( data ) {
			dataAdapter.dataBind();
		});		        	
	});
	

	// Button Processing/Action
	
	// NEW BUTTON
	$("#excelExport").jqxButton({ theme: theme, width:100 });                        
	$("#excelExport").click(function () {
		$("#jqxgrid").jqxGrid('exportdata', 'xls', 'jqxGrid');           
	});
	$.mobile.loading('hide');				
});
