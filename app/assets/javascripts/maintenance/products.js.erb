// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.

$( '#_maintenance_products' ).live('pageshow', function(event){
	// prepare the data
	$.mobile.loading('show');
	var theme = settings.theme

	url = system.server + $('.ui-page-active').attr('data-url') + '.json'
	var source =
	{
		datatype : "json",
		type: 'GET',	
		datafields: [	
			{ name: 'entity' },
			{ name: 'description' },
			{ name: 'external_id' },
			{ name: 'product_type' },
			{ name: 'upc' },
			{ name: '_id' }
		],
		url: url,
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	var dataAdapter = new $.jqx.dataAdapter(source, {
		loadComplete: function (data) { },
		loadError: function (xhr, status, error) { }      
	});

	// Initialize Grid
	$("#jqxgrid").jqxGrid(
	{
		// Grid Options
		groupable: true,
		sortable: true,
		filterable: true,
		showfilterrow: true,		
        autoshowfiltericon: true,		
		theme: theme,
		width: '100%',
		groupsexpandedbydefault: true,
		height:  system.table_height,
		source: dataAdapter,
		columnsresize: true,
		altrows: true,	
		columns: [
			{ text: 'Brewer', datafield: 'entity', filtertype: 'checkedlist' },
			{ text: 'Product', datafield: 'description' },
			{ text: 'Brewer ID', datafield: 'external_id' }, 
			{ text: 'Varietal', datafield: 'product_type', filtertype: 'checkedlist'},
//			{ text: 'UPC', datafield: 'upc' },
		]
	});

	$('#jqxgrid').bind('rowselect', function (event){	    
	    var args = event.args;
	    var row = args.rowindex;
	    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', row);		
		$.ajax({
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			type: "GET",
			dataType : "JSON",
			data: rowdata,
		}).done(function( data ) {				
			// Entity List
			$("#entity_id").jqxDropDownList({ source: data['entities'], disabled: false });
			var item = $("#entity_id").jqxDropDownList('getItemByValue', data['product']['entity_id']);
			$("#entity_id").jqxDropDownList('selectItem', item );

			$("#product_type_id").jqxDropDownList({ source: data['product_types'], disabled: false });
			var item = $("#product_type_id").jqxDropDownList('getItemByValue', data['product']['product_type_id']);
			$("#product_type_id").jqxDropDownList('selectItem', item );

			// Enable Inputs
			$(".form_input").jqxInput({disabled: false });
			$(".form_input").val('');
			$(".toggle_switch").jqxToggleButton({disabled: false });
			
			$("#updateSaveButton").jqxButton({disabled: false});
			$("#updateSaveButton").show();
			$("#newSaveButton").hide();
			$("#newCancelButton").hide();

			// User Detail Input Values
			$.each(data['product'], function(key, value){
				element = $('#' + key)
				element.val(value)				
			})
		});					
	});

    $('#docking').jqxDocking({ theme: theme,  orientation: 'horizontal', width: '100%', mode: 'docked' });
    $('#docking').jqxDocking('disableWindowResize', 'window1');
    $('#docking').jqxDocking('disableWindowResize', 'window2');
	$('#docking').jqxDocking('pinWindow', 'window1');
	$('#docking').jqxDocking('pinWindow', 'window2');
	$('#docking').jqxDocking('hideAllCloseButtons');

	$('#docking').jqxDocking('setWindowProperty','window1', 'keyboardCloseKey', 'none' ),

	// Inputs
	$("#entity_id").jqxDropDownList({ source: {}, valueMember: 'value', displayMember: 'html', width: '100%',  height: '25px', theme: theme, disabled: true });
	$("#product_type_id").jqxDropDownList({ source: {}, valueMember: 'value', displayMember: 'html', width: '100%',  height: '25px', theme: theme, disabled: true });
	
	$(".form_input").jqxInput({height: '25px', width: '100%', minLength: 1, theme: theme, disabled: true });

	$(".toggle_switch").jqxToggleButton({ width: '100%', height:'15px', theme: theme, disabled: true });
    $(".toggle_switch").bind('click', function () {        
        if(!$(this).attr('disabled')){	        
	        var toggled = $(this).jqxToggleButton('toggled');
	        if (toggled) {
	            $(this).html('On');
	            $(this).val(1);
	        }
	        else {
				$(this).html('Off');
	            $(this).val(0);
	        }
	    }
    });

	$('#form_validator').jqxValidator({
	 	rules: [
	 		// Email Rules
	        { input: '#description', message: 'Product Name is required!', action: 'keyup, blur', rule: 'required' },
	        { input: '#entity_id', message: 'Brewer Required!', action: 'keyup, blur',rule: function(input, commit){
		            if (  $("#entity_id").jqxDropDownList('getSelectedItem') != null) {
		                return true;		                
		            }
		           	return false;		           
	        	}
	        },
	        { input: '#product_type_id', message: 'Varietal Required!', action: 'keyup, blur',rule: function(input, commit){
		            if (  $("#product_type_id").jqxDropDownList('getSelectedItem') != null) {
		                return true;		                
		            }
		           	return false;		           
	        	}
	        },	        
		],
		theme: theme
	});    

	$("#updateSaveButton").jqxButton({disabled: true, theme: theme, width: '100%'});
    $("#updateSaveButton").bind('click', function () {
        var params = {}
        params['entity_id'] = $("#entity_id").jqxDropDownList('getSelectedItem').value;
        params['product_type_id'] = $("#product_type_id").jqxDropDownList('getSelectedItem').value;


        $('.toggle_switch').each(function(key, obj) {        
        	params[obj.id] = $(obj).val();
        });

        $('.form_input').each(function(key, obj) {        
        	params[obj.id] = $(obj).val();
        });        

		var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');		
	    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);	   
	    var url =  system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id']	
		$.ajax({
			url: url,
			type: "PUT",
			dataType : "JSON",
			data: params,
		}).done(function( data ) {	
			if(data['success'] == false){
				alert(data['message'])
			}
			dataAdapter.dataBind();
		})
    });
    
    $("#newCancelButton").jqxButton({disabled: true, theme: theme, width: '100%'});
	$("#newSaveButton").jqxButton({disabled: true, theme: theme, width: '100%'});
    $("#newSaveButton").bind('click', function () {
        var params = {}
        params['entity_id'] = $("#entity_id").jqxDropDownList('getSelectedItem').value;              
        $('.toggle_switch').each(function(key, obj) {        
        	params[obj.id] = $(obj).val();
        });

        $('.form_input').each(function(key, obj) {        
        	params[obj.id] = $(obj).val();
        });        
		
		var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');		
	    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);
		$.ajax({
			url: system.server + $('.ui-page-active').attr('data-url'),
			type: "POST",
			data: params,
		}).done(function( data ) {	
			if(data['success'] == false){
				alert(data['message'])
			}
			dataAdapter.dataBind();
			
			$("#entity_id").jqxDropDownList('clearSelection' ); 
			$("#product_type_id").jqxDropDownList('clearSelection' ); 			
			
			$(".toggle_switch").html('Off');
            $(".toggle_switch").val(0);
            $(".toggle_switch").jqxToggleButton({toggled: false });
            $(".toggle_switch").jqxToggleButton('refresh');

			$(".form_input").jqxInput({disabled: false });
			$(".form_input").val('');

			$(".toggle_switch").jqxToggleButton({disabled: false, toggled: false });			
		})
    });	


	$("#new").jqxButton({ theme: theme, width:100 });            
	$("#new").click(function () {
		$.ajax({
			type: "GET",
			dataType : "JSON",
			url: system.server + $('.ui-page-active').attr('data-url') + '/new',
			data: { },
		}).done(function( data ) {						
			$("#entity_id").jqxDropDownList({ source: data['entities'], disabled: false });
			$("#entity_id").jqxDropDownList('clearSelection' ); 

			$("#product_type_id").jqxDropDownList({ source: data['product_types'], disabled: false });
			$("#product_type_id").jqxDropDownList('clearSelection' ); 			
			
			$(".toggle_switch").html('Off');
            $(".toggle_switch").val(0);
            $(".toggle_switch").jqxToggleButton({toggled: false });
            $(".toggle_switch").jqxToggleButton('refresh');

			$(".form_input").jqxInput({disabled: false });
			$(".form_input").val('');

			$(".toggle_switch").jqxToggleButton({disabled: false, toggled: false });

			$("#newSaveButton").jqxButton({disabled: false});			
			$("#newCancelButton").jqxButton({disabled: false});			

			$("#newSaveButton").show();			
			$("#newCancelButton").show();
			$("#updateSaveButton").hide();
		});		        	
	});

	$("#delete").jqxButton({ theme: theme, width:100 });
	$("#delete").click(function () {
		var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');
		var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);		
		$.ajax({
			type: "DELETE",
			dataType : "JSON",
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			data: { 
				_id: rowdata['_id'],
			},
		}).done(function( data ) {
			dataAdapter.dataBind();
		});		        	
	});
	

	// Button Processing/Action
	
	// NEW BUTTON
	$("#excelExport").jqxButton({ theme: theme, width:100 });                        
	$("#excelExport").click(function () {
		$("#jqxgrid").jqxGrid('exportdata', 'xls', 'jqxGrid');           
	});
	$.mobile.loading('hide');					

});
