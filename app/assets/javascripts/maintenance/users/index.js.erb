// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
$(document).on('pageshow', '#_maintenance_users', function(event){	
	$.mobile.loading('show');
	var theme = settings.theme
	jqxIntialize()
	url = system.server + $('.ui-page-active').attr('data-url') + '.json'	
	var source =
	{
		datatype: "json",
		datafields: [
			{ name: 'entity_description' },
			{ name: 'first_name' },
			{ name: 'last_name' },
			{ name: 'email' },
			{ name: 'cell_phone' },
			{ name: 'office_phone' },

			{ name: 'scanner_delivery_pickup' },
			{ name: 'scanner_add' },
			{ name: 'scanner_fill' },
			{ name: 'scanner_move' },

			{ name: 'user_maintenance' },
			{ name: 'location_maintenance' },
			{ name: 'product_maintenance' },
			{ name: 'network_maintenance' },
			{ name: 'barcode_maker_maintenance' },
			{ name: '_id'}		], 
		url: url,
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	window.dataAdapter = new $.jqx.dataAdapter(source, {
		beforeSend: function(jqXHR, settings){
			$.mobile.loading('show');	
		},
		loadComplete: function (data) { 
			$.mobile.loading('hide');
		},
		loadError: function (xhr, status, error) { }      
	});
//	window.dataAdapter = dataAdapter

	// Initialize Grid
	$(".jqxGrid").jqxGrid(	
	{
		// Grid Options
		groupable: true,
		sortable: true,
		filterable: true,
		showfilterrow: true,		
        autoshowfiltericon: true,		
		theme: theme,
		width: '100%',
		groupsexpandedbydefault: true,
		height:  system.full_window_table_height(),
		source: dataAdapter,
		columnsresize: true,
		altrows: true,		
		columns: [
			{ text: 'First', datafield: 'first_name' },
			{ text: 'Last', datafield: 'last_name' },
			{ text: 'Email', datafield: 'email' }, 
			{ text: 'Entity', datafield: 'entity_description', filtertype: 'checkedlist' },
			{ text: 'Cell', datafield: 'cell_phone' },
			{ text: 'Office', datafield: 'office_phone' },

			{ text: 'Pickup/Delivery (Scanner)', datafield: 'scanner_delivery_pickup', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}
				}
			},
			{ text: 'Add (Scanner)', datafield: 'scanner_add', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {					
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Fill (Scanner)', datafield: 'scanner_fill', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {					
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Move (Scanner)', datafield: 'scanner_move', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},

			{ text: 'User (Maintenance)', datafield: 'user_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Location (Maintenance)', datafield: 'location_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {							
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Product (Maintenance)', datafield: 'product_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Network (Maintenance)', datafield: 'network_maintenance', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {							
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},			
			{ text: 'View', datafiefld: '_id', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
				var dataRecord = $("#jqxGrid").jqxGrid('getrowdata', row);			
				return 'View'
			}},			

		]
	});
	$.mobile.loading('hide');					

});
