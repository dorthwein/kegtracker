// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.

$(document).on('pageshow', '#_system_asset_types', function(event){	
	$.mobile.loading('show');
	var theme = settings.theme

	url = system.server + $('.ui-page-active').attr('data-url') + '.json'	
	var source =
	{
		datatype: "json",
		datafields: [
			{ name: 'description' },
			{ name: 'measurement_unit_qty' },
			{ name: 'measurement_unit' },
			{ name: 'measurement_unit_description'},
			{ name: 'tier_1' },
			{ name: 'tier_2' },
			{ name: 'tier_3' },
			{ name: 'tier_4' },
			{ name: 'returnable' },
			{ name: '_id' },
		], 
		url: url,
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	window.dataAdapter = new $.jqx.dataAdapter(source, {
		beforeSend: function(jqXHR, settings){
			$.mobile.loading('show');	
		},
		loadComplete: function (data) { 
			$.mobile.loading('hide');
		},
		loadError: function (xhr, status, error) { }      
	});
//	window.dataAdapter = dataAdapter

	// Initialize Grid
	$("#jqxgrid").jqxGrid(
	{
		// Grid Options
		groupable: true,
		sortable: true,
		filterable: true,
		showfilterrow: true,		
        autoshowfiltericon: true,		
		theme: theme,
		width: '100%',
		groupsexpandedbydefault: true,
		height:  system.full_window_table_height,
		source: dataAdapter,
		columnsresize: true,
		altrows: true,		
		columns: [
			{ text:'Description', datafield: 'description' },
			{ text:'Qty/unit', datafield: 'measurement_unit_qty' },
			{ text:'Measurement Unit', datafield: 'measurement_unit_description' },
			{ text: 'Returnable', datafield: 'returnable', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},				
			{ text: 'Tier 1', datafield: 'tier_1', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Tier 2', datafield: 'tier_2', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Tier 3', datafield: 'tier_3', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},
			{ text: 'Tier 4', datafield: 'tier_4', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
					if(value == 1){
						return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
					} else {
						return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
					}

				} 
			},		
			{ text: 'View', datafiefld: '_id', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
				var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', row);			
				return 'View'
			}},			

		]
	});
	$('#jqxgrid').bind('rowselect', function (event){	    
	    var args = event.args;
	    var row = args.rowindex;
	    var rowdata = $('#jqxgrid').jqxGrid('getrowdata', row);		
		$.ajax({
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			type: "GET",
			dataType : "JSON",
			data: rowdata,
		}).done(function( data ) {							
			$.each($('.jqxDropDownList'), function(key, value){
				element = $('#' + value.id)				
				$(element).jqxDropDownList({source: data['jqxDropDownLists'][value.id]});
				
				item = $(element).jqxDropDownList('getItemByValue', data['record'][value.id]);
				$(element).jqxDropDownList('selectItem', item );
			})
		});					
	});

	$("#jqxgrid").on("cellclick", function (event) {
	    var column = event.args.column;	   
	    var rowindex = event.args.rowindex;
		var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);

	    var columnindex = event.args.columnindex;
	    if(column.text == 'View'){	    	
	    	window.open($('.ui-page-active').attr('data-url') + "/" + rowdata['_id'], "_blank", system.popup_settings);
		}	    
	});       

	$(".jqxInput").jqxInput({height: '25px', width: '100%', minLength: 1, theme: theme, disabled: false });
	$(".jqxDropDownList").jqxDropDownList({valueMember: 'value', displayMember: 'html', width: '100%',  height: '25px', theme: theme, disabled: false });

	$("#new").jqxButton({ theme: theme, width:100 });            
	$("#new").click(function () {
		window.open($('.ui-page-active').attr('data-url') + "/new", "_blank", system.popup_settings);	        	
	});

	$("#delete").jqxButton({ theme: theme, width:100 });            
	$("#delete").click(function () {
		var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');
		var rowdata = $('#jqxgrid').jqxGrid('getrowdata', rowindex);		
		$.ajax({
			type: "DELETE",
			dataType : "JSON",
			url: system.server + $('.ui-page-active').attr('data-url') + '/' + rowdata['_id'],
			data: { 
				_id: rowdata['_id'],
			},
		}).done(function( data ) {
			dataAdapter.dataBind();
		});		        	
	});

	// Button Processing/Action	
	// NEW BUTTON
	$("#excelExport").jqxButton({ theme: theme,});                        
	$("#excelExport").click(function () {
		$("#jqxgrid").jqxGrid('exportdata', 'xls', 'jqxGrid');           
	});
	$.mobile.loading('hide');					
});
