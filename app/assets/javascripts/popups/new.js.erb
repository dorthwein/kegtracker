// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.

$(document).on('pageshow', '#popup_new', function(event){	
	var theme = settings.theme
	$(".jqxInput").jqxInput({height: '20px', width: '100%', minLength: 1, theme: theme, disabled: false });
	$(".jqxDropDownList").jqxDropDownList({ source: {}, valueMember: 'value', displayMember: 'html', width: '100%',  height: '20px', theme: theme, disabled: false });
	$(".jqxToggle").jqxToggleButton({ theme: theme, width:'75px', disabled: false});               
	

    $(".jqxToggle").bind('click', function () {    	    	    
    	if ($(this).attr("disabled") != "disabled"){
	        var toggled = $(this).jqxToggleButton('toggled');
	        if (toggled) {
	            $(this).val(1);
	            $(this).html('On');
	        }
	        else {
	        	$(this).val(0);
	        	$(this).html('Off');
	        }
	    }
    });

    var form_rules = []
    if($('#password').length > 0){
	    form_rules.push({input: '#password', message:'Required!', action: 'keyup, blur', rule: 'required'});
	    form_rules.push({input: '#password_confirmation', message:'Required!', action: 'keyup, blur', rule: 'required'});
	    form_rules.push({ input: '#password_confirmation', message: 'Passwords doesn\'t match!', action: 'keyup, focus', rule: function (input, commit) {
	        // call commit with false, when you are doing server validation and you want to display a validation error on this field. 
	        if (input.val() === $('#password').val()) {
	            return true;
	        }
	        return false;
	    }});
	}

	$.each($('.jqxDropDownList.required'), function(key, value){
		var id = '#' + value.id		
		form_rules.push({input: id, message: 'Required!', action: 'keyup, blur', rule: function(input, commit){									
			var item = $(element).jqxDropDownList('getSelectedItem')			
			var id = '#' + value.id		
			var element = $(id)
			if( $(element).jqxDropDownList('getSelectedItem') == null){
				return false
			} else return true
		}})		
	})

	$.each($('.jqxInput.required'), function(key, value){
		id = '#' + value.id
		form_rules.push({input: id, message: 'Required!', action: 'keyup, blur', rule: 'required'})
	})

    $('.jqxValidator').jqxValidator({ rules: form_rules });
	
	var url =  system.server + $('.ui-page-active').attr('data-url')
	$.ajax({
		url: url,
		type: "GET",
		dataType : "JSON",
		data: params,
	}).done(function( data ) {			
		$.each($('.jqxDropDownList'), function(key, value){
			element = $('#' + value.id)				
			$(element).jqxDropDownList({source: data['jqxDropDownLists'][value.id]});
		});
	})	

	$("#save").jqxButton({ theme: theme, width:'45%' });            
	$("#save").click(function () {
		if(	$('#popup_new').jqxValidator('validate')){
			$.mobile.loading('show');		
	        var params = {record: {}}
			$.each($('.jqxDropDownList'), function(key, value){
				element = $('#' + value.id)				
				params['record'][value.id] = $(element).jqxDropDownList('getSelectedItem').value              				
			})

			$.each($('.jqxInput'), function(key, value){
				element = $('#' + value.id)
				params['record'][value.id] = $(element).val();
			})

			$.each($('.jqxToggle'), function(key, value){
				element = $('#' + value.id)
				params['record'][value.id] = $(element).val();
			})

			var url =  system.server + $('.ui-page-active').attr('data-url');
			url = url.substring(0, url.length - 4) + '.json';		    
			$.ajax({
				type: "POST",
				dataType : "JSON",
				url: url,
				data: params,
			}).done(function( data ) {						
				var jqxgrid = window.opener.dataAdapter
				jqxgrid.dataBind();
				window.close();
			})
		}
	});
	$("#cancel").jqxButton({ theme: theme, width:'45%' });            
	$("#cancel").click(function () {
		window.close()
	});
});
