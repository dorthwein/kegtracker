
<div class="full display">
    <div class="toolbar">
        <h3 class="left">   System Entities    </h3>
        <h3 class="right">  <%= current_user.entity.description %>  </h3>    
        <div id="gridOptions">
            <div id="gridOptionsButtons">
                <button class='excelExport'> Excel </button>       
                <button class='jqxFilterToggle'> Filter Off </button>
                <button class='jqxGridColumnListBoxToggle' > Columns </button>                
				<%= form_tag("entities/distributor_upload", :method => "post", :multipart => true) do %>	

            </div>
            <div id="gridOptionsExtended">
                <div class="jqxGridColumnListBox">  </div>                
            </div>
        </div>
    </div>        
    <div class="jqxGrid full display">  </div>
</div>

<!--   OLD 	-->
<!--
	<div class="toolbar">
	</div>

	<div class="full sidebar">
	   	<input type="button" value="New" class='new' data-role="none"/>
		<input type="button" value="Delete" class='delete' data-role="none" />
	    <input type="button" value="Excel" class='excelExport' data-role="none"/> 
		
			<input type="submit" style="float:left; margin:5px;" value="Upload Distributors" id='distributor_upload_button' data-role="none" />
			Â <%= file_field_tag 'csv_file' %>
		<% end %>
	    <div class="jqxGridColumnListBox">  </div>
	</div>
	<div class="full display">
	    <div class="jqxGrid full display"></div>
	</div>
-->

<script>
$(document).ready(function(){        
	 var source =
	{
		datatype: "json",
		datafields: [
			{ name: 'description' },
			{ name: 'name'},
			{ name: 'street' },
			{ name: 'city' },
			{ name: 'state' },
			{ name: 'zip' },			
			{ name: 'admin_user_email' },
			{ name: 'mode' },
			{ name: 'distribution_network_count' },
			{ name: 'production_network_count' },
			{ name: 'market_network_count' },
			{ name: 'billing_status' },
			{ name: 'kt_rate' },
			{ name: '_id' },
		], 
		url: parseUrl(location),
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	window.dataAdapter = new $.jqx.dataAdapter(source, {
		beforeSend: function(jqXHR, settings){
			 	
		},
		loadComplete: function (data) { 
			 
		},
		loadError: function (xhr, status, error) { }      
	});

	// Initialize Grid
    var gridSettings = settings.jqxGridProperties
    gridSettings['source'] = dataAdapter;
    gridSettings['columns'] = [
		{ text: 'Entity', datafield: 'description' },	
		{ text: 'Admin', datafield: 'admin_user_email'},
		{ text: 'Address Name', datafield: 'name', filtertype: 'checkedlist' },		
		{ text: 'Street', datafield: 'street', filtertype: 'checkedlist' },
		{ text: 'City', datafield: 'city' },			
		{ text: 'State', datafield: 'state', filtertype: 'checkedlist' },
		{ text: 'Zip', datafield: 'zip' },
		{ text: 'KegTracker Rate', datafield: 'kt_rate', filtertype: 'checkedlist' },			
		{ text: 'Billing Status', datafield: 'billing_status' },
		{ text: 'Mode', datafield: 'mode', filtertype: 'checkedlist' },			
		{ text: 'Dist. Networks', width:100, datafield: 'distribution_network_count', filtertype: 'number' },			
		{ text: 'Prod. Networks', width:100, datafield: 'production_network_count', filtertype: 'number' },			
		{ text: 'Mrkt. Networks', width:100, datafield: 'market_network_count', filtertype: 'number' },
        { text: 'Billing Histories', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
            return 'View'
        }, buttonclick: function (row) {
            var rowdata = $('.jqxGrid').jqxGrid('getrowdata', row);
            parseUrl(location) = parseUrl(location) + "/" + rowdata['_id'] + '/billing_facts'
        }}, 

        { text: 'View', datafield: '_id', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
            return 'View'
        }, buttonclick: function (row) {
            var rowdata = $('.jqxGrid').jqxGrid('getrowdata', row);
            var url = parseUrl(location) + "/" + rowdata['_id']            
            openPopupWindow(url);           
        }}, 

	]
    $(".jqxGrid").jqxGrid( gridSettings );  
    
	$("#distributor_upload_button").jqxButton({ theme: settings.theme,});                        
/*
	$("#distributor_upload_button").click(function () {				
	    url = parseUrl(location) + '/distributor_upload'
	    alert(url);
	    $('#fileupload').fileupload({	        
	        url: url,
	        type: 'POST',
	        done: function (e, data) {
	        	alert('Complete');
//	            $.each(data.result.files, function (index, file) {
//	                $('<p/>').text(file.name).appendTo(document.body);
//	            });
	        }
	    });		
	});
*/
	jqxIntialize()
});
</script>









