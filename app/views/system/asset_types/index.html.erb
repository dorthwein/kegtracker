<div class="full sidebar">
    <div class="logo">    
    </div>

   	<input type="button" value="New" class='new' data-role="none"/>
	<input type="button" value="Delete" class='delete' data-role="none" />
    <input type="button" value="Excel" class='excelExport' data-role="none"/> 

    <button class='jqxFilterToggle' data-role="none"> Filter Off </button>


    <div class="jqxGridColumnListBox">  </div>
</div>
<div class="full display">
    <div class="toolbar">   

    </div>
    <div class="jqxGrid full display"></div>
</div>

<script>
$(document).ready(function(){        

	 	var source =
	{
		datatype: "json",
		datafields: [
			{ name: 'description' },
			{ name: 'measurement_unit_qty' },
			{ name: 'measurement_unit' },
			{ name: 'measurement_unit_description'},
			{ name: 'tier_1' },
			{ name: 'tier_2' },
			{ name: 'tier_3' },
			{ name: 'tier_4' },
			{ name: 'returnable' },
			{ name: '_id' },
		], 
		url: location.href,
		updaterow: function (rowid, rowdata, commit) {
			// synchronize with the server - send update command
			// call commit with parameter true if the synchronization with the server is successful 
			// and with parameter false if the synchronization failder.		
			commit(true);
		}
		
	};

	window.dataAdapter = new $.jqx.dataAdapter(source, {
		beforeSend: function(jqXHR, settings){
			 	
		},
		loadComplete: function (data) { 
			 
		},
		loadError: function (xhr, status, error) { }      
	});

	// Initialize Grid
    var gridSettings = settings.jqxGridProperties
    gridSettings['source'] = dataAdapter;
    gridSettings['columns'] = [
		{ text:'Description', datafield: 'description' },
		{ text:'Qty/unit', datafield: 'measurement_unit_qty' },
		{ text:'Measurement Unit', datafield: 'measurement_unit_description' },
		{ text: 'Returnable', datafield: 'returnable', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
				if(value == 1){
					return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
				} else {
					return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
				}

			} 
		},				
		{ text: 'Tier 1', datafield: 'tier_1', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
				if(value == 1){
					return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
				} else {
					return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
				}

			} 
		},
		{ text: 'Tier 2', datafield: 'tier_2', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
				if(value == 1){
					return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
				} else {
					return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
				}

			} 
		},
		{ text: 'Tier 3', datafield: 'tier_3', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
				if(value == 1){
					return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
				} else {
					return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
				}

			} 
		},
		{ text: 'Tier 4', datafield: 'tier_4', filterable: false, width: '75px', cellsrenderer: function (row, column, value) {
				if(value == 1){
					return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
				} else {
					return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
				}

			} 
		},		
        { text: 'View', datafield: '_id', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
            return 'View'
        }, buttonclick: function (row) {
            var rowdata = $('.jqxGrid').jqxGrid('getrowdata', row);
            var url = location.href + "/" + rowdata['_id']            
            openPopupWindow(url);           
        }}, 
	]
    $(".jqxGrid").jqxGrid( gridSettings );  
    
	jqxIntialize()
});
</script>