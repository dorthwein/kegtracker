<div id="dashboard_div" style="text-align:center;">
    <div class="full sidebar">
        <div class="logo">    
        </div>

        <div class="categoryControlContainer" id="categoryControl1"> </div>
        <div class="categoryControlContainer" id="categoryControl2"> </div>
        <div class="categoryControlContainer" id="categoryControl3"> </div>
        <div class="categoryControlContainer" id="categoryControl4"> </div>
        <div class="categoryControlContainer" id="categoryControl5"> </div>
        <div class="categoryControlContainer" id="categoryControl6"> </div>
        <div class="categoryControlContainer" id="categoryControl7"> </div>
        <div class="categoryControlContainer" id="categoryControl8"> </div>
    
    </div>
    <div class="full display" style="font-size:10px;">
        <div class="toolbar">
        </div>
    

        <div id="charts" style="padding:0 1% 0 1%; width:98%">
            <div id='column_select'> 
                <div style="padding:4px 16px;" data-column="5" id="empty_quantity">
                    Empty </div>
                <div style="padding:4px 16px;" data-column="6" id="market_quantity">
                    Market</div>
                <div style="padding:4px 16px;" data-column="7" id="full_quantity">
                    Full</div>
                <div style="padding:4px 16px;" data-column="8" id="total_quantity">
                    Total</div>                
            </div>

            <div id="chart1" style="width:100%%; height:350px; margin:10px 0 0 0">  
                <!-- CHART 1 -->
            </div>
            <div id="chartRangeFinder1"> </div>
            
            <div style="width:100%; margin:5px 0 0 0">
                <div id="chart2" style="padding-left:2%; width:34%;display:inline-block;height:250px;">
                    <!-- CHART 2 -->
                </div>

                <div id="chart3" style="width:63%; display:inline-block; height:250px;">
                    <!-- CHART 3 -->
                </div>
            </div>

            <div id="chart4" style="width:100%; height:250px; margin:35px 0 25px 0;">
                <!-- Dataset -->    
            </div>            
        </div>
    </div>
</div>
<script>
// prepare the data
$(document).ready(function(){
    selected_column = 8
    $("#column_select").jqxButtonGroup({ theme: 'classic', mode: 'radio' });
    $('#column_select').jqxButtonGroup('setSelection', 3);

    $.ajax({
        url: location.href + '.json',
        dataType: 'TEXT',
    }).done(function(JSONData) {
    // Build main DataTable (dataset)
        var dataTable = new google.visualization.DataTable(JSONData);
    
    // Get SKU Distinct Values
        var dashboard = new google.visualization.Dashboard(
            document.getElementById('dashboard_div')
        );

    // Add on Change Listener
        google.visualization.events.addListener(dashboard, 'ready', drawCharts);                    

    // Build dashboard DataTable
        var dashTable = new google.visualization.ChartWrapper({
            'chartType': 'Table',
            'containerId': 'chart4',
            'options': {
                width: '100%',
                height: 300,
                legend: 'right',
                cssClassNames: {
                    headerRow: 'headerRow',
                    tableRow: 'tableRow',
                    oddTableRow: 'oddTableRow',
                    selectedTableRow: 'selectedTableRow',
                    hoverTableRow: 'hoverTableRow',
                    headerCell: 'headerCell',
                    tableCell: 'tableCell',
                    rowNumberCell: 'rowNumberCell',
                }                
            }
        });

    // Add Dashboard Controls/Filters
        filters = [
            new google.visualization.ControlWrapper( g_chart_api.CategoryFilter('categoryControl1', 'Location Network') ),
            new google.visualization.ControlWrapper( g_chart_api.CategoryFilter('categoryControl2', 'Brewer') ),
            new google.visualization.ControlWrapper( g_chart_api.CategoryFilter('categoryControl3', 'Product') ),
            new google.visualization.ControlWrapper( g_chart_api.CategoryFilter('categoryControl4', 'Size') ),
            new google.visualization.ControlWrapper( g_chart_api.CategoryFilter('categoryControl5', 'SKU') ),            
        ]
         dashboard.bind(filters, dashTable);
         dashboard.draw(dataTable);

        var rtime;
        var timeout = false;
        var delta = 100;
        $(window).resize(function() {
            rtime = new Date();
            if (timeout === false) {
                timeout = true;
                setTimeout(resizeend, delta);
            }
        });

        function resizeend() {
            if (new Date() - rtime < delta) {
                setTimeout(resizeend, delta);
            } else {
                timeout = false;
                dashTable.draw()
            }               
        }



    // Draw Charts Function
        function drawCharts(){
        // Get data from dashboard DataTable
            var graphData = dashTable.getDataTable()
            var dataTableSkuValues = dataTable.getDistinctValues(2)            

        // Set/Create DataViewColumns specific to page
            var chart2DataViewColumns = [
                {
                    type: 'string',
                    label: 'SKU', // dataTableSkuValues[i],
                    sourceColumn: 2,
                    calc: function (sourceDataTable, row) {
                        var today = new Date();
                        today = today.toDateString();
                        factDate = sourceDataTable.getValue(row, 9).toDateString();
                        if (factDate == today){
                            return sourceDataTable.getValue(row, 2);
                        }
                    },                    
                },
                {
                    type: 'number',
                    label: 'Asset Count', // dataTableSkuValues[i],
                    sourceColumn: selected_column,
                    calc: function (sourceDataTable, row) {

                        var today = new Date();
                        today = today.toDateString();
                        factDate = sourceDataTable.getValue(row, 9).toDateString();
                        if (factDate == today){
                            return sourceDataTable.getValue(row, selected_column);
                        }
                    },                    
                },      
            ]

            var chart1DataViewColumns = [9]

            var chart3DataViewColumns = [
                {
                    type: 'string',
                    label: 'Aggregation',
                    calc: function(){
                        return 'Current Quantity'
                    }
                },
                
            ]        
            var chart2DataPivotColumns = [
                {
                    column: 1,
                    type: 'number',
                    label: 'Asset Quantity',
                    // Requires custom chart2 function to elichart2ate 0 values
                    aggregation: function(values){
                        values = values.filter(Number)
                        var sum = 0;
                        for (var i = 0; i < values.length; i++) {
                            sum += values[i];
                        }                    
                        return sum
                    }
                }            
            ]
            var chart1DataPivotColumns = []
            var chart3DataPivotColumns = []

        // For each SKU create distinct columns
            // Note - Averages are an average of an average - need to deterchart2e correct math calculations
            // Possibly remove bottom 20% & top 20% at report generation

//            $('#column_select').jqxButtonGroup('getSelection')//.attr('data-column'))
            $.each(dataTableSkuValues, function(key, value){
                // Create View Columns
                    // Used to create a correctly formatted chart table layout

                var chart1ViewCol = {
                    type: 'number',
                    label: value, // dataTableSkuValues[i],
                    calc: function (sourceDataTable, row) {
                        if(sourceDataTable.getValue(row, 2) == value){                    
                            return sourceDataTable.getValue(row, selected_column);
                        }
                    },                                    
                }

                var chart3ViewCol = {
                    type: 'number',
                    label: value, // dataTableSkuValues[i],
                    calc: function (sourceDataTable, row) {
                        var today = new Date();
                        today = today.toDateString();
                        factDate = sourceDataTable.getValue(row, 9).toDateString();
                        
                        if (sourceDataTable.getValue(row, 2) == value && factDate == today){
                            return sourceDataTable.getValue(row, selected_column);
                        }

                    },                    
                }

                // Create Pivoted Columns
                    // Used to aggregate the View Columns to present chart2/chart3/chart1

                var chart1PivotCol = {
                    column: key + 1,
                    type: 'number',
                    label: value,            
                    aggregation: function(values){
                        values = values.filter(Number)
                        var sum = 0;
                        for (var i = 0; i < values.length; i++) {
                            sum += values[i];
                        }                    
                        return sum
                    }

                }
                var chart3PivotCol = {
                    column: key + 1,
                    type: 'number',
                    label: value,
                    aggregation: function(values){
                        values = values.filter(Number)
                        var sum = 0;
                        for (var i = 0; i < values.length; i++) {
                            sum += values[i];
                        }                    
                        return sum
                    }
                }
            // Push to respective Arrays
                chart1DataViewColumns.push(chart1ViewCol);
                chart3DataViewColumns.push(chart3ViewCol);

                chart1DataPivotColumns.push(chart1PivotCol);
                chart3DataPivotColumns.push(chart3PivotCol);

            });

        // Create Chart DataView
            var chart2DataView = new google.visualization.DataView(graphData);
            var chart1DataView = new google.visualization.DataView(graphData);
            var chart3DataView = new google.visualization.DataView(graphData);

        // Set Chart DataView Columns
            chart2DataView.setColumns( chart2DataViewColumns)
            chart1DataView.setColumns( chart1DataViewColumns)
            chart3DataView.setColumns( chart3DataViewColumns)
            
        // Create Google Visulizations on DataView /w Aggregated Data (i.e. pivoted views)
            var chart2PivotedData = google.visualization.data.group(chart2DataView, [0], chart2DataPivotColumns)
            var chart1PivotedData = google.visualization.data.group(chart1DataView, [0], chart1DataPivotColumns)
            var chart3PivotedData = google.visualization.data.group(chart3DataView, [0], chart3DataPivotColumns)

            var chart2ColumnChart = new google.visualization.PieChart(document.getElementById('chart2'));  
            var chart1LineChart = new google.visualization.LineChart(document.getElementById('chart1'));  
            var chart3ColumnChart = new google.visualization.ColumnChart(document.getElementById('chart3'));  


        // Set Chart Options
            var chart1Options =  {
                legend: {
                    position:'bottom',
                    textStyle:{color: '#333', fontSize: 12},
                },

                curveType: 'function',
                title: '# of Assets by SKU',    
                titleTextStyle: {color: '#333'},
                hAxis: {
                    textStyle:{color: '#333', fontSize: 12},
                },
                vAxis: {
                    textStyle:{color: '#333', fontSize: 12},
                },            
                chartArea:{    
                    width:'98%',
                    left:'2%',
                    top:'10%',
                }
            }
            var chart2Options =  {
                title: 'Current Asset allocations by SKU',
                legend: {position:'left'},
                chartArea:{width:"100%", height:'85%', top:'10%'},      
            }
            var chart3Options =  {
                title: 'Current SKU Quantities',
                legend: {position:'none'},
                chartArea:{width:"96%", height:'80%', left:'4%'},      
            }

        // Draw Charts
            chart2ColumnChart.draw(chart2PivotedData, chart2Options);
            chart1LineChart.draw(chart1PivotedData, chart1Options);
            chart3ColumnChart.draw(chart3PivotedData, chart3Options);
        }
        $("#column_select").on('buttonclick', function (event) {
            var clickedButton = event.args.button;
            selected_column = parseInt($('#' + clickedButton[0].id).attr('data-column'));       
            drawCharts();
        });

    });                 
});
</script>