    <div class="toolbar">   
        <h3 class="left">
            My Networks Maintenance
        </h3>
        <h3 class="right">
            <%= current_user.entity.description %>
        </h3>
    </div>

    <div class="full sidebar">
        <div class="logo">    
        </div>

	   	<input type="button" value="New" class='new' data-role="none"/>
		<input type="button" value="Delete" class='delete' data-role="none"/>
        <input type="button" value="Excel" class='excelExport' data-role="none"/>       
        <button class=' jqxFilterToggle' data-role="none"> Filter Off </button>



        <div class="jqxGridColumnListBox">  </div>
    </div>
    <div class="full display">
        <div class="jqxGrid full display"></div>
    </div>

<script>

$(document).ready(function(){
    var source =
    {
        datatype: "json",
        datafields: [
            { name: 'netid' },
            { name: 'description' },
            { name: 'entity_id' },
            { name: 'entity_description' },
            { name: 'network_type_description' },       
            { name: 'smart_mode_product_description' },                 
            { name: 'smart_mode_in_location_description' },                 
            { name: 'smart_mode_out_location_description' },                    
        
            { name: 'auto_mode' }, 
            { name: '_id'}                  

        ], 
        url: location.href,
        updaterow: function (rowid, rowdata, commit) {
            // synchronize with the server - send update command
            // call commit with parameter true if the synchronization with the server is successful 
            // and with parameter false if the synchronization failder.     
            commit(true);
        }
        
    };

    window.dataAdapter = new $.jqx.dataAdapter(source, {
        beforeSend: function(jqXHR, settings){
                
        },
        loadComplete: function (data) { 
             
        },
        loadError: function (xhr, status, error) { }      
    });
//  window.dataAdapter = dataAdapter

    // Initialize Grid
    var gridSettings = settings.jqxGridProperties
    gridSettings['source'] = dataAdapter;
    gridSettings['columns'] = [
        { text: 'NetID', datafield: 'netid' },
        { text: 'Network', datafield: 'description' },
        { text: 'Network Type', datafield: 'network_type_description', filtertype: 'checkedlist' },
        { text: 'Entity', datafield: 'entity_description', filtertype: 'checkedlist' },
        { text: 'Auto Fill Product', datafield: 'smart_mode_product_description' },         
        { text: 'In Bound Location', datafield: 'smart_mode_in_location_description' },     
        { text: 'Out Bound Location', datafield: 'smart_mode_out_location_description' },                   
        { text: 'Auto Mode', datafield: 'auto_mode', filterable:false, width: '75px', cellsrenderer: function (row, column, value) {
                if(value == 1){
                    return '<div class="grid_check on"> <span class="ui-icon ui-icon-check" style="display:inline-block"> </span></div>'
                } else {
                    return '<div class="grid_check off"> <span class="ui-icon ui-icon-delete" style="display:inline-block"> </span></div>'
                }
            }
        },      
        { text: 'View', datafield: '_id', columntype: 'button', filterable:false, width:'75px', cellsrenderer: function (row) {
            return 'View'
        }, buttonclick: function (row) {
            var rowdata = $('.jqxGrid').jqxGrid('getrowdata', row);
            var url = location.href + "/" + rowdata['_id']                      
            openPopupWindow(url)
        }}, 
    ]

    $(".jqxGrid").jqxGrid( gridSettings );  
    jqxIntialize()
                        
});



</script>